@inject IJSRuntime jsRuntime

<div id="editor"></div>

@code {
    class Options
    {
        public bool AutomaticLayout { get; set; }
    }

    [Parameter]
    public string Code { get; set; }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            jsRuntime.InvokeVoidAsync("monacoInterop.initialize", "editor", Code, "csharp");
        }

        return Task.CompletedTask;
    }

    public ValueTask<string> GetCode()
    {
        return jsRuntime.InvokeAsync<string>("monacoInterop.getCode", "editor");
    }

    public object SetCode(string code)
    {
        return jsRuntime.InvokeVoidAsync("monacoInterop.setCode", "editor", code);
    }
}
